# install azure-cli
choco install azure-cli
# or
$ProgressPreference = 'SilentlyContinue'; Invoke-WebRequest -Uri https://aka.ms/installazurecliwindows -OutFile .\AzureCLI.msi; Start-Process msiexec.exe -Wait -ArgumentList '/I AzureCLI.msi /quiet'; rm .\AzureCLI.msi

# check if it working
az --version

# create docker image for the tracker app
docker build -t tracker-app-image .

# check if it created successfully
docker images

# run docker image
docker run -d -p 80:80 tracker-app-image

# check if it working locally
http://localhost

# login to azure
az login

# create resource group
az group create --name trackerapprg --location westeurope

# create azure container registry
az acr create --resource-group trackerapprg --name trackerappcr --sku Basic

# login to the registry
az acr login --name trackerappcr

# get login server name
az acr show --name trackerappcr --query loginServer --output table

# tag the image
docker tag tracker-app-image trackerappcr.azurecr.io/tracker-app-image:v1

# push the image to the ACR
docker push trackerappcr.azurecr.io/tracker-app-image:v1

# list images in the ACR
az acr repository list --name trackerappcr

# To get registry credentials you need the following commands:
$ACR_NAME='$trackerappcr'
$SERVICE_PRINCIPAL_NAME='$trackerappsp'
# obtain the full registry ID
$ACR_REGISTRY_ID=$(az acr show --name $ACR_NAME --query "id" --output tsv)
# Create and configure the service principal with pull permissions to your registry
$PASSWORD=$(az ad sp create-for-rbac --name $SERVICE_PRINCIPAL_NAME --scopes $ACR_REGISTRY_ID --role acrpull --query "password" --output tsv)
# if "ERROR: Insufficient privileges to complete the operation." occurs: go to access keys and enable Admin user
$USER_NAME=$(az ad sp list --display-name $SERVICE_PRINCIPAL_NAME --query "[].appId" --output tsv)
# Output the service principal's credentials
echo "Service principal ID: $USER_NAME"
echo "Service principal password: $PASSWORD"

# deploy container
az container create --resource-group trackerapprg `
--name trackerapp `
--image trackerappcr.azurecr.io/tracker-app-image:v2 `
--cpu 1 `
--memory 1 `
--registry-login-server trackerappcr.azurecr.io `
--registry-username trackerappcr `
--registry-password fIzUj+IG7P/xH4/3Hdp4Dyf8O/uzKfIphY0hKHQMkd+ACRD6CJlp `
--ip-address Public `
--dns-name-label trackerappdnsnasko `
--ports 80

# view container state
az container show --resource-group trackerapprg --name trackerapp --query instanceView.state

# view qualified domain name
az container show --resource-group trackerapprg --name trackerapp --query ipAddress.fqdn

# see if the app is working
trackerappdnsnasko.westeurope.azurecontainer.io