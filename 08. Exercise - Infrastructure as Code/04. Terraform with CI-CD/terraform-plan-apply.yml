name: "Terraform Plan and Apply"

on:
  push:
    branches:
      - main

permissions:
  contents: read

env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

jobs:
  terraform-plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest

    # use the bash shell wheter the Github actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Login to Azure via Azure CLI
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # install the latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # initialize a new or existing Terraform working directory by creating initial files, downloading remote state files and working with plugin modules
    - name: Terraform Init
      id: init
      run: terraform init

    # generate an execution plan
    - name: Terraform Plan
      run: terraform plan -input=false -out=tfplan

    # save plan to artifacts
    - name: Save Plan
      uses: actions/upload-artifact@v2
      with:
        name: tfplan
        path: tfplan


  terraform-apply:
    name: "Terraform Apply"
    runs-on: ubuntu-latest
    needs: terraform-plan

    steps:
    # checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # install latest version of Terraform CLI
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
    
    # initialize a new or existing Terraform working directory by creating initial files, downloading remote state files and working with plugin modules
    - name: Terraform Init
      run: terraform init

    # download saved plan from artifacts
    - name: Download Plan
      uses: actions/download-artifact@v2
      with:
        name: tfplan
        path: .
    
    # terraform apply
    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan